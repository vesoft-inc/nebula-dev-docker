FROM centos:7

ENV TZ=Asia/Shanghai
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
ENV LANG=en_US.utf8

RUN yum update -y && yum install -y epel-release \
  && yum install -y \
    autoconf \
    curl \
    curl-devel \
    expat-devel \
    gettext \
    glibc-devel \
    glibc-headers \
    # FIXME: Please remove following libev libraries after third party rebuilt.
    libev \
    libev-devel \
    m4 \
    make \
    ncurses-devel \
    openldap-devel \
    openssh-clients \
    openssl-devel \
    # for lcov
    perl-JSON \
    perl-PerlIO-gzip \
    perl-Digest-MD5 \
    python3-devel \
    python3-pip \
    readline-devel \
    redhat-lsb-core \
    rpm-build \
    sudo \
    unzip \
    vim \
    wget \
    xz \
    zlib-devel \
    # client
    libatomic \
    ninja-build \
    centos-release-scl && \
    yum clean all && rm -rf /var/cache/yum

WORKDIR /root

ENV TOOLSET_CLANG_DIR=/opt/vesoft/toolset/clang/10.0.0
ENV TOOLSET_GCC_DIR=/opt/vesoft/toolset/gcc/9.3.0
ENV PATH=/opt/vesoft/toolset/cmake/bin:${TOOLSET_GCC_DIR}/bin:${TOOLSET_CLANG_DIR}/bin:${PATH}
ENV CCACHE_CPP2=1
ENV CC=${TOOLSET_GCC_DIR}/bin/gcc
ENV CXX=${TOOLSET_GCC_DIR}/bin/g++
ENV GCOV=${TOOLSET_GCC_DIR}/bin/gcov

SHELL ["/bin/bash", "-c"]

# Install gcc and llvm by nebula-gears
RUN bash <(curl -s https://raw.githubusercontent.com/vesoft-inc/nebula-gears/master/install) --prefix=/opt/vesoft/ \
  && /opt/vesoft/bin/install-gcc --version=9.3.0 \
  && /opt/vesoft/bin/install-llvm --version=10.0.0 

# Install cmake
RUN wget https://github.com/Kitware/CMake/releases/download/v3.20.0/cmake-3.20.0-linux-$(uname -m).sh \
    && chmod +x cmake-3.20.0-linux-$(uname -m).sh \
    && ./cmake-3.20.0-linux-$(uname -m).sh --skip-license --prefix=/usr/local \
    && rm cmake-3.20.0-linux-$(uname -m).sh

# Install git 2.25
RUN wget -qO- https://github.com/git/git/archive/v2.25.0.tar.gz | tar zxf - -C ./ \
  && cd git-2.25.0 \
  && make configure \
  && ./configure --prefix=/usr \
  && make -j$(nproc) && make install \
  && cd ../ && rm -rf git-2.25.0

# Install nebula third-party 1.0 and 2.0 and 3.0 and 3.3
RUN git clone https://github.com/vesoft-inc/nebula-third-party.git \
  && cd nebula-third-party \
  && ./install-third-party.sh \
  && git checkout origin/release-3.3 \
  && ./install-third-party.sh \
  && git checkout origin/release-3.4-cloud \
  && ./install-third-party.sh \
  && git checkout origin/v3.0 \
  && ./install-third-party.sh \  
  && git checkout origin/v2.0 \
  && ./install-third-party.sh \
  && git checkout origin/v1.0 \
  && ./install-third-party.sh \
  && cd .. && rm -rf nebula-third-party

# Install ccache
RUN wget -qO- https://github.com/ccache/ccache/releases/download/v3.7.7/ccache-3.7.7.tar.gz | tar zxf - -C ./ \
  && cd ccache-3.7.7 \
  && ./configure \
  && make -j \
  && make install \
  && cd ../ && rm -rf ccache-*

# Install lcov to /usr/local/bin, require master to make gcc9 happy
RUN git clone --branch master --single-branch https://github.com/linux-test-project/lcov.git \
  && cd lcov && git checkout 75fbae1cfc5027f818a0bb865bf6f96fab3202da \
  && make install && cd ../ && rm -rf lcov

# fastcov
RUN pip3 install --no-cache-dir fastcov

# Install ossutil
RUN curl https://gosspublic.alicdn.com/ossutil/install.sh | bash

#Install mold
RUN mkdir /usr/local/mold && wget -qO- https://oss-cdn.nebula-graph.com.cn/toolset/mold/mold-1.10.1-$(uname -m)-linux.tar.gz | tar xzf - --strip-components=1 -C /usr/local/mold/ \
    && ln -snf  /opt/vesoft/toolset/gcc/9.3.0/lib64/libstdc++.so.6 /usr/lib64/libstdc++.so.6
ENV PATH=/usr/local/mold/bin:${PATH}

#Install minio client
RUN if [ "$(uname -m)" = "x86_64" ]; then \
        curl -O https://dl.min.io/client/mc/release/linux-amd64/mc; \
    else \
        curl -O https://dl.min.io/client/mc/release/linux-arm64/mc; \
    fi \
    && chmod +x mc \
    && mv mc /usr/local/bin/
